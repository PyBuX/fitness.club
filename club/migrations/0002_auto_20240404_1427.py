# Generated by Django 4.2.2 on 2024-04-04 09:27
from django.contrib.auth.models import User
from django.contrib.auth.models import Group

from django.db import migrations
# Подключаем модуль для работы с датой/веременем
from datetime import datetime, timedelta
# Подключаем модуль генерации случайных чисел
import random

# Получение случайной даты в заданном диапазоне дат
#start_dt = datetime.strptime("01.01.1963", "%d.%m.%Y")
#end_dt = datetime.strptime("01.01.2001", "%d.%m.%Y")
#print(get_random_date(start_dt, end_dt))
def get_random_date(start, end):
    delta = end - start
    return start + timedelta(random.randint(0, delta.days))

#data_rozhdeniya = datetime.strptime("28.12.1969", "%d.%m.%Y")
#print(get_iin(data_rozhdeniya, "М"))

# Получение случайного адреса (k - включает ли адрес квартиру)
def get_adres(k):
    ulica = ["ул. Архитектурная", 
            "ул. Баженова", 
            "ул. Ботаническая", 
            "ул. Вавилова", 
            "ул. Воинов-интернационалистов", 
            "ул. Гастелло", 
            "ул. Гончарная", 
            "ул. Грибоедова", 
            "ул. Дружбы", 
            "ул. Ержанова",
            "ул. Ермекова",
            "ул. Заводская", 
            "ул. Защитная", 
            "ул. Ипподромная", 
            "ул. Караванная", 
            "ул. Карла Маркса", 
            "ул. Кирпичная", 
            "ул. Кооперации", 
            "ул. Космонавтов", 
            "ул. Курмангазы", 
            "ул. Луговая", 
            "ул. Луначарского", 
            "ул. Маяковского", 
            "ул. Металлистов", 
            "ул. Мира", 
            "ул. Некрасова", 
            "ул. Новоселов",
            "ул. Олимпийская", 
            "ул. Победы", 
            "ул. Привокзальная", 
            "ул. Садовая", 
            "ул. Степная", 
            "ул. Стремянная", 
            "ул. Университетская", 
            "ул. Чехова", 
            "ул. Чайковского", 
            "ул. Энтузиастов",
            "ул. Юбилейная",
            "ул. Южная"
        ]
    if (k==True):
        adres = random.choice(ulica) + ", " + str(random.randint(1, 200)) + "-" + str(random.randint(1, 200)) 
    else:
        adres = random.choice(ulica) + ", " + str(random.randint(1, 200)) 
    return adres

# Получение случайного телефона
def get_telefon():
    if random.randint(0, 1) == 1:
        telefon = "+7-901-"
    else:
        telefon = "+7-902-" 
    telefon = telefon + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + "-" + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) 
    return telefon

# Найти или Добавить клубную карту
global dict_card
dict_card = {}

def get_card(apps, val):   
    # Поиск 
    if val in dict_card.values():
        for k, v in dict_card.items():
            if v == val:
                return k    
    else:
        Card = apps.get_model("club", "Card")
        card = Card()
        card.card_title = val
        card.save()
        dict_card[card.id] = card.card_title
        return card.id

# Добавить Клиенты
def insert_client(apps, param):
    Client = apps.get_model("club", "Client")
    client = Client()
    client.full_name = param[0]
    client.birthday = param[1]
    client.sex = param[2]
    client.phone = param[3]
    client.card_id = param[4]
    client.save()
    return 

# Добавить Инструкторы
def insert_instructor(apps, param):
    Instructor = apps.get_model("club", "Instructor")
    instructor = Instructor()
    instructor.full_name = param[0]
    instructor.sex = param[1]
    instructor.phone = param[2]
    instructor.user_id = param[3]
    instructor.save()
    return 

# Найти или Добавить группу
global dict_party
dict_party = {}

def get_party(apps, val):   
    # Поиск 
    if val in dict_party.values():
        for k, v in dict_party.items():
            if v == val:
                return k    
    else:
        Party = apps.get_model("club", "Party")
        party = Party()
        party.party_title = val
        party.save()
        dict_party[party.id] = party.party_title
        return party.id

# Добавить состав группы
def insert_party_members(apps, param):
    PartyMembers = apps.get_model("club", "PartyMembers")
    party_members = PartyMembers()
    party_members.party_id = param[0]
    party_members.client_id = param[1]
    party_members.save()
    return 

# Найти или Добавить виды занятий/предоставляемых услуг
global dict_kind
dict_kind = {}

def get_kind(apps, val):   
    # Поиск 
    if val in dict_kind.values():
        for k, v in dict_kind.items():
            if v == val:
                return k    
    else:
        Kind = apps.get_model("club", "Kind")
        kind = Kind()
        kind.kind_title = val
        kind.price = 500
        kind.save()
        dict_kind[kind.id] = kind.kind_title
        return kind.id

# Добавить зал
def insert_hall(apps, param):
    Hall = apps.get_model("club", "Hall")
    hall = Hall()
    hall.hall_title = param[0]
    hall.equipment = param[1]
    hall.save()
    return 

# Добавить Расписание занятий
def insert_schedule(apps, param):
    Schedule = apps.get_model("club", "Schedule")
    schedule = Schedule()
    schedule.start_date = param[0]
    schedule.finish_date = param[1]
    schedule.hall_id = param[2]
    schedule.kind_id = param[3]
    schedule.party_id = param[4]
    schedule.save()
    return 

# Добавить Инструкторы на занятие
def insert_schedule_instructor(apps, param):
    ScheduleInstructor = apps.get_model("club", "ScheduleInstructor")
    schedule_instructor = ScheduleInstructor()
    schedule_instructor.schedule_id = param[0]
    schedule_instructor.instructor_id = param[1]
    schedule_instructor.save()
    return 

# Добавить оплату
def insert_payment(apps, param):
    Payment = apps.get_model("club", "Payment")
    payment = Payment()
    payment.payment_date = param[0]
    payment.party_id = param[1]
    payment.client_id = param[2]
    payment.amount = param[3]
    payment.save()
    return 

# Начальные данные 
def new_data(apps, schema_editor):
    try:
        # Суперпользователь id=1
        user = User.objects.create_superuser(username='root',
        email='root@mail.ru',
        first_name='Андрей', 
        last_name='Власов',
        password='qdbKP753+-')
        print("Суперпользователь создан")

        # Простые пользователи () id2-11
        user = User.objects.create_user(username='user01', password='Jup123+-', email='user01@mail.ru', first_name='Илья', last_name='Дик')
        user = User.objects.create_user(username='user02', password='Jup123+-', email='user02@mail.ru', first_name='Анна', last_name='Хуторная')
        user = User.objects.create_user(username='user03', password='Jup123+-', email='user03@mail.ru', first_name='Николай', last_name='Евдокименко')
        user = User.objects.create_user(username='user04', password='Jup123+-', email='user04@mail.ru', first_name='Мария', last_name='Ропперт')
        user = User.objects.create_user(username='user05', password='Jup123+-', email='user05@mail.ru', first_name='Кобенко', last_name='Роман')
        user = User.objects.create_user(username='user06', password='Jup123+-', email='user06@mail.ru', first_name='Дитц', last_name='Ирина')
        user = User.objects.create_user(username='user07', password='Jup123+-', email='user07@mail.ru', first_name='Никита', last_name='Олейничук')
        user = User.objects.create_user(username='user08', password='Jup123+-', email='user08@mail.ru', first_name='Александра', last_name='Будкина')
        user = User.objects.create_user(username='user09', password='Jup123+-', email='user09@mail.ru', first_name='Ксения', last_name='Максимова')
        user = User.objects.create_user(username='user10', password='Jup123+-', email='user10@mail.ru', first_name='Кристина', last_name='Прутникова')        
        print("Созданы простые пользователи")

        
        # Добавить Инструктора
        parameters = ["Дик Илья Вадимович", "М", get_telefon(), 2]
        insert_instructor(apps, parameters)
        parameters = ["Хуторная Анна Сергеевна", "Ж", get_telefon(), 3]
        insert_instructor(apps, parameters)
        parameters = ["Евдокименко Николай Валерьевич", "М", get_telefon(), 4]
        insert_instructor(apps, parameters)
        parameters = ["Ропперт Мария Сергеевна", "Ж", get_telefon(), 5]
        insert_instructor(apps, parameters)
        parameters = ["Кобенко Роман Сергеевич", "М", get_telefon(), 6]
        insert_instructor(apps, parameters)
        parameters = ["Дитц Ирина Олеговна", "Ж", get_telefon(), 7]
        insert_instructor(apps, parameters)
        parameters = ["Олейничук Никита Сергеевич", "М", get_telefon(), 8]
        insert_instructor(apps, parameters)
        parameters = ["Будкина Александра Сергеевна", "Ж", get_telefon(), 9]
        insert_instructor(apps, parameters)
        parameters = ["Максимова Ксения Сергеевна", "Ж", get_telefon(), 10]
        insert_instructor(apps, parameters)
        parameters = ["Прутникова Кристина Сергеевна", "Ж", get_telefon(), 11]
        insert_instructor(apps, parameters)
        print("Созданы Инструктора")

        # Добавить Клиента
        parameters = ["Люфт Иван Витальевич", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Синицын Артём Дмитриевич", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Котенёв Илья Вячеславович", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Макушенко Вячеслав Павлович", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Соколов Руслан Александрович", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Премиум")]
        insert_client(apps, parameters)
        parameters = ["Аксенов Анатолий Григорьевич", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Нейфельд Виталий Павлович", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Лампартер Владимир Федорович", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Уколов Данил Андреевич", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Бирюлин Рустам Валерьевич", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Премиум")]
        insert_client(apps, parameters)
        parameters = ["Сиваш Алексей Владимирович", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Панин Виктор Романович", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Яцковский Илья Юрьевич", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Лобкарев Сергей Андреевич", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Панферов Дмитрий Игоревич", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "М", get_telefon(), get_card(apps, "Премиум")]
        insert_client(apps, parameters)
        parameters = ["Урубкова Евгения Владимировна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Фирсова Юлия Андреевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Карпова Екатерина Александровна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Дорошенко Наталья Николаевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Шалыгина Ксения Владимировна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Премиум")]
        insert_client(apps, parameters)
        parameters = ["Коренная Марина Васильевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Скрипченко Кристина Андреевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Чупрова Алена Вадимовна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Тыщенко Яна Андреевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Просветова Юлия Евгеньевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Премиум")]
        insert_client(apps, parameters)
        parameters = ["Назаренко Луиза Николаевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Фоос Анастасия Петровна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Белова Кристина Сергеевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Дубских Анастасия Евгеньевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Стандарт")]
        insert_client(apps, parameters)
        parameters = ["Троекашина Ангелина Юрьевна", get_random_date(datetime.strptime("01.09.1963", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), "Ж", get_telefon(), get_card(apps, "Премиум")]
        insert_client(apps, parameters)
        print("Созданы клиенты")

        # Добавить группы и их членов
        parameters = [get_party(apps, "Фитнесс"), 1]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Фитнесс"), 2]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Фитнесс"), 3]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Фитнесс"), 4]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Фитнесс"), 5]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Фитнесс"), 6]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Фитнесс"), 7]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Фитнесс"), 8]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Аэробика"), 7]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Аэробика"), 8]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Аэробика"), 9]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Аэробика"), 10]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Аэробика"), 11]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Аэробика"), 12]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Аэробика"), 13]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Аэробика"), 14]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Гимнастика"), 13]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Гимнастика"), 14]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Гимнастика"), 15]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Гимнастика"), 16]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Гимнастика"), 17]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Гимнастика"), 18]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Гимнастика"), 19]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Гимнастика"), 20]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Йога"), 19]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Йога"), 20]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Йога"), 21]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Йога"), 22]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Йога"), 23]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Йога"), 24]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Йога"), 25]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Йога"), 26]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Силовые упражнения"), 25]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Силовые упражнения"), 26]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Силовые упражнения"), 27]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Силовые упражнения"), 28]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Силовые упражнения"), 29]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Силовые упражнения"), 30]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Силовые упражнения"), 1]
        insert_party_members(apps, parameters)
        parameters = [get_party(apps, "Силовые упражнения"), 2]
        insert_party_members(apps, parameters)        
        print("Созданы группы")

        # Добавить зал
        parameters = ["Зал №1", "Спортивное оборудование"]
        insert_hall(apps, parameters) 
        parameters = ["Зал №2", "Спортивное оборудование"]
        insert_hall(apps, parameters) 
        parameters = ["Зал №3", "Спортивное оборудование"]
        insert_hall(apps, parameters) 
        print("Созданы зал")

        # Добавить расписание
        parameters = ["2024-03-01 18:00:00", "2024-03-01 20:00:00", 1, get_kind(apps, "Функциональная тренировка"), 1]
        insert_schedule(apps, parameters) 
        parameters = [1, 1]
        insert_schedule_instructor(apps, parameters) 
        parameters = [1, 2]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-01 18:00:00", "2024-03-01 20:00:00", 2, get_kind(apps, "Функциональная тренировка"), 2]
        insert_schedule(apps, parameters) 
        parameters = [2, 3]
        insert_schedule_instructor(apps, parameters) 
        parameters = [2, 4]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-01 18:00:00", "2024-03-01 20:00:00", 3, get_kind(apps, "Функциональная тренировка"), 3]
        insert_schedule(apps, parameters) 
        parameters = [3, 5]
        insert_schedule_instructor(apps, parameters) 
        parameters = [3, 6]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-01 20:00:00", "2024-03-01 22:00:00", 1, get_kind(apps, "Функциональная тренировка"), 4]
        insert_schedule(apps, parameters) 
        parameters = [4, 7]
        insert_schedule_instructor(apps, parameters) 
        parameters = [4, 8]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-01 20:00:00", "2024-03-01 22:00:00", 2, get_kind(apps, "Функциональная тренировка"), 5]
        insert_schedule(apps, parameters) 
        parameters = [5, 9]
        insert_schedule_instructor(apps, parameters) 
        parameters = [5, 10]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-05 18:00:00", "2024-03-05 20:00:00", 1, get_kind(apps, "Кардио-тренировка"), 1]
        insert_schedule(apps, parameters) 
        parameters = [6, 1]
        insert_schedule_instructor(apps, parameters) 
        parameters = [6, 2]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-05 18:00:00", "2024-03-05 20:00:00", 2, get_kind(apps, "Кардио-тренировка"), 2]
        insert_schedule(apps, parameters) 
        parameters = [7, 3]
        insert_schedule_instructor(apps, parameters) 
        parameters = [7, 4]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-05 18:00:00", "2024-03-05 20:00:00", 3, get_kind(apps, "Кардио-тренировка"), 3]
        insert_schedule(apps, parameters) 
        parameters = [8, 5]
        insert_schedule_instructor(apps, parameters) 
        parameters = [8, 6]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-05 20:00:00", "2024-03-05 22:00:00", 1, get_kind(apps, "Кардио-тренировка"), 4]
        insert_schedule(apps, parameters) 
        parameters = [9, 7]
        insert_schedule_instructor(apps, parameters) 
        parameters = [9, 8]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-05 20:00:00", "2024-03-05 22:00:00", 2, get_kind(apps, "Кардио-тренировка"), 5]
        insert_schedule(apps, parameters) 
        parameters = [10, 9]
        insert_schedule_instructor(apps, parameters) 
        parameters = [10, 10]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-09 18:00:00", "2024-03-01 20:00:00", 1, get_kind(apps, "Функциональная тренировка"), 1]
        insert_schedule(apps, parameters) 
        parameters = [11, 1]
        insert_schedule_instructor(apps, parameters) 
        parameters = [11, 2]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-09 18:00:00", "2024-03-01 20:00:00", 2, get_kind(apps, "Функциональная тренировка"), 2]
        insert_schedule(apps, parameters) 
        parameters = [12, 3]
        insert_schedule_instructor(apps, parameters) 
        parameters = [12, 4]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-09 18:00:00", "2024-03-01 20:00:00", 3, get_kind(apps, "Функциональная тренировка"), 3]
        insert_schedule(apps, parameters) 
        parameters = [13, 5]
        insert_schedule_instructor(apps, parameters) 
        parameters = [13, 6]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-09 20:00:00", "2024-03-01 22:00:00", 1, get_kind(apps, "Функциональная тренировка"), 4]
        insert_schedule(apps, parameters) 
        parameters = [14, 7]
        insert_schedule_instructor(apps, parameters) 
        parameters = [14, 8]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-09 20:00:00", "2024-03-01 22:00:00", 2, get_kind(apps, "Функциональная тренировка"), 5]
        insert_schedule(apps, parameters) 
        parameters = [15, 9]
        insert_schedule_instructor(apps, parameters) 
        parameters = [15, 10]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-11 18:00:00", "2024-03-05 20:00:00", 1, get_kind(apps, "Функциональная тренировка"), 1]
        insert_schedule(apps, parameters) 
        parameters = [16, 1]
        insert_schedule_instructor(apps, parameters) 
        parameters = [16, 2]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-11 18:00:00", "2024-03-05 20:00:00", 2, get_kind(apps, "Функциональная тренировка"), 2]
        insert_schedule(apps, parameters) 
        parameters = [17, 3]
        insert_schedule_instructor(apps, parameters) 
        parameters = [17, 4]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-11 18:00:00", "2024-03-05 20:00:00", 3, get_kind(apps, "Функциональная тренировка"), 3]
        insert_schedule(apps, parameters) 
        parameters = [18, 5]
        insert_schedule_instructor(apps, parameters) 
        parameters = [18, 6]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-13 20:00:00", "2024-03-05 22:00:00", 1, get_kind(apps, "Функциональная тренировка"), 4]
        insert_schedule(apps, parameters) 
        parameters = [19, 7]
        insert_schedule_instructor(apps, parameters) 
        parameters = [19, 8]
        insert_schedule_instructor(apps, parameters) 

        parameters = ["2024-03-13 20:00:00", "2024-03-05 22:00:00", 2, get_kind(apps, "Функциональная тренировка"), 5]
        insert_schedule(apps, parameters) 
        parameters = [20, 9]
        insert_schedule_instructor(apps, parameters) 
        parameters = [20, 10]
        insert_schedule_instructor(apps, parameters) 

        print("Созданы расписание")

        # Платежи
        parameters = ["2024-03-21 20:00:00", 1, 1, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-21 20:00:00", 1, 2, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-21 20:00:00", 1, 3, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-21 20:00:00", 1, 4, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-21 20:00:00", 1, 5, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-21 20:00:00", 1, 6, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-21 20:00:00", 1, 7, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-21 20:00:00", 1, 8, 2000]
        insert_payment(apps, parameters) 

        parameters = ["2024-03-22 20:00:00", 2, 7, 2400]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-22 20:00:00", 2, 8, 2400]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-22 20:00:00", 2, 9, 2400]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-22 20:00:00", 2, 10, 2400]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-22 20:00:00", 2, 11, 2400]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-22 20:00:00", 2, 12, 2400]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-22 20:00:00", 2, 13, 2400]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-22 20:00:00", 2, 14, 2400]
        insert_payment(apps, parameters) 

        parameters = ["2024-03-23 19:00:00", 3, 13, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-23 19:00:00", 3, 14, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-23 19:00:00", 3, 15, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-23 19:00:00", 3, 16, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-23 19:00:00", 3, 17, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-23 19:00:00", 3, 18, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-23 19:00:00", 3, 19, 2000]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-23 19:00:00", 3, 20, 2000]
        insert_payment(apps, parameters) 

        parameters = ["2024-03-24 19:00:00", 4, 19, 2500]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 4, 20, 2500]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 4, 21, 2500]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 4, 22, 2500]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 4, 23, 2500]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 4, 24, 2500]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 4, 25, 2500]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 4, 26, 2500]
        insert_payment(apps, parameters) 

        parameters = ["2024-03-24 19:00:00", 5, 25, 2100]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 5, 26, 2100]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 5, 27, 2100]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 5, 28, 2100]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 5, 29, 2100]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 5, 30, 2100]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 5, 1, 2100]
        insert_payment(apps, parameters) 
        parameters = ["2024-03-24 19:00:00", 5, 2, 2100]
        insert_payment(apps, parameters) 

        print("Созданы Платежи")

    except Exception as error:
        print(error)

class Migration(migrations.Migration):

    dependencies = [
        ('club', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(new_data),        
    ]
